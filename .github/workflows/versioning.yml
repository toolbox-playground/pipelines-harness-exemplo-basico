name: Versioning Control

on: 
    push:
      branches:
        - main
      paths-ignore:
        - 'CHANGELOG.md'
        - 'package.json'
        - 'package-lock.json'
    workflow_dispatch: # Evento que aciona o fluxo de trabalho manualmente
      inputs: # Define os inputs do fluxo de trabalho
        name: # Define o input "name"
          description: 'Trigger manual do Workflow' # Descrição do input
          required: false # Adicionado para que o input 'name' seja opcional, se não for usado
permissions:
  contents: write # Permite que o GITHUB_TOKEN escreva no repositório (para criar tags e fazer push)
  pull-requests: write # Se você planeja criar PRs automaticamente (opcional, remova se não for usar)
  # Se você estiver usando o 'npm run release' que interage com releases do GitHub, 'contents: write' geralmente já cobre.
# -----------------------------------------------------------------

jobs: 
    versioning-control:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.GITHUB_TOKEN }}

            - name: Install and Build
              run: |
                npm install

            - name: Configuring Git Account
              run: |
                git config --global user.email "pipelines@toolboxdevops.cloud"
                git config --global user.name "Toolbox Automation"

            - name: Check commit message for specific keywords
              run: |
                text=$(git log -1 --no-merges --pretty=%B)
                echo $text
                if [[ $text =~ (fix|patch) ]]; then
                  npm run release -- --release-as patch
                  echo "{{ Patching Versioning }}"
                elif [[ $text =~ (BREAKING\ CHANGE) ]]; then
                  npm run release -- --release-as major
                  echo "{{ Major Versioning }}"
                elif [[ $text =~ (feat) ]]; then
                  echo "{{ Minor Versioning }}"
                  npm run release -- --release-as minor
                else
                  npm run release -- --release-as patch
                  echo {{ Default Patching Versioning }}
                fi
                git push --follow-tags origin main